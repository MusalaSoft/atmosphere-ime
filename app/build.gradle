// This file is part of the ATMOSPHERE mobile testing framework.
// Copyright (C) 2016 MusalaSoft
//
// ATMOSPHERE is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// ATMOSPHERE is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with ATMOSPHERE.  If not, see <http://www.gnu.org/licenses/>.

apply plugin: 'com.android.application'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
  }
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"

    defaultConfig {
        applicationId "com.musala.atmosphere.ime"
        minSdkVersion 11
        targetSdkVersion 25
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    signingConfigs {
        release {
            storeFile file(releaseStoreFile)
            storePassword releaseStorePassword
            keyAlias releaseKeyAlias
            keyPassword releaseKeyPassword
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    // This is important, it will run lint checks but won't abort build
    // It's required because log4j causes warnings that stop the build
    lintOptions {
        abortOnError false
    }
}

// bintray publishing parameters
version = '0.0.1'
def organizationName = 'musala'
def repoName = 'atmosphere'
def projectName = 'atmosphere-ime'
def url = 'https://github.com/MusalaSoft/atmosphere-ime.git'
def description = 'Add javadocJar and sourcesJar tasks to build.gradle and update the atmosphere-commons dependency version'

dependencies {
    compile ('com.musala.atmosphere:atmosphere-commons:0.+') {
        exclude module: 'framework-api19'
        exclude group: 'log4j'
    }
}

publishToMavenLocal.dependsOn assembleRelease

publishing {
    publications {
        atmosphereIme(MavenPublication) {
            groupId 'com.musala.atmosphere'
            artifactId "$projectName"
            version version

            artifact("$buildDir/outputs/apk/${project.getName()}-release.apk")

            if (System.getProperty('bintray.user') != null) {
                artifact sourcesJar
                artifact javadocJar
            }
        }
    }

    repositories {
        mavenLocal()
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

/*
 This is publishing task that uploads the artifacts to bintray.com.
 see: https://github.com/bintray/gradle-bintray-plugin
 see: https://reflectoring.io/guide-publishing-to-bintray-with-gradle/

 Use the following command for automatic upload to bintray:
 $ ./gradlew bintrayUpload -Dbintray.user=<BINTRAY_USERNAME> -Dbintray.key=<BINTRAY_API_KEY> -Dgpg.pass=<ATMOSPHERE_PASSPHRASE>
*/
bintray {
    user = System.getProperty('bintray.user')
    key = System.getProperty('bintray.key')
    publications = ['atmosphereIme']

	pkg {
        repo = "$repoName" // existing repository in bintray to add the artifacts to
        name = "$projectName" // package name, current project name
        userOrg = "$organizationName" // the name of the organization, If not added will use 'BINTRAY_USER' by default
        licenses = ['GPL-3.0']
        vcsUrl = "$url" // your VCS URL
        version {
            name = project.version.toString()
            desc = "$description"
            released  = new Date()

            gpg {
                sign = true // Determines whether to GPG sign the files. The default is false
                passphrase = System.getProperty('gpg.pass') // Optional. The passphrase for GPG signing'
            }
        }
    }
}
